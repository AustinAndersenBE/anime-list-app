datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AnimeStatus {
  WATCHED
  NOT_WATCHED // deprecated feature
  WILL_WATCH
}

model User {
  id            Int @id @default(autoincrement())
  username      String @unique
  email         String @unique
  passwordHash  String
  isAdmin       Boolean @default(false)
  userAnimeList UserAnimeList[] // one-to-many
  posts         Post[]
  following     UserFollow[] @relation("UserFollows")
  followers     UserFollow[] @relation("UserFollowers")
}

model UserFollow {
  followerId    Int
  followingId   Int
  follower      User @relation("UserFollowers", fields: [followerId], references: [id])
  following     User @relation("UserFollows", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}

model UserAnimeList {
  userId          Int
  externalAnimeId String
  animeTitle      String
  status          AnimeStatus
  rating          Decimal? @db.Decimal(4,2)
  user            User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, externalAnimeId])
}

model Post {
  id              Int @id @default(autoincrement())
  userId          Int
  externalAnimeId String?
  episodeNumber   Int? // deprecate this for now 
  title           String
  content         String
  createdDate     DateTime @default(now()) // enforce this at application level
  updatedDate     DateTime @updatedAt
  user            User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
